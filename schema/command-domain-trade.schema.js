const schemaValidator = require("../schemaValidator");

const inputSchema = schemaValidator
  .object()
  .required()
  .keys({
    // domain [string:ascii] [mandatory]: a .ro domain
    domain: schemaValidator
      .string()
      .required()
      .RoTLDDomain(),

    // authorization_key [string:alphanum] [mandatory]:
    // the authorization key provided by the registrant.
    authorization_key: schemaValidator
      .string()
      .required()
      .RoTLDAlphanum(),

    // c_registrant [string] [mandatory]:
    //  The new registrant contact ID (a registrant must be created before).
    // The registrant contact ID must be unique for each trade.
    c_registrant: schemaValidator.string().required(),

    // domain_period [string] [mandatory]:
    // a number between 1 and 10] which represents the number of years.
    // A year has 365 days and it does not account the leap years.
    domain_period: schemaValidator
      .number()
      .required()
      .integer()
      .min(1)
      .max(10),

    // domain_password[string:ascii][optional]:
    // If not present, a password will be generated by the system.
    // A valid password must:
    // have minimum 6 characters;
    // have maximum 40 characters;
    // have at least one uppercase character;
    // have at least one lowercase character;
    // have at least one digit;
    // contain the characters: [a-z 0-9-.,:;[]{}_+=@#$^*?!|~].
    domain_password: schemaValidator
      .string()
      .min(5)
      .max(40)
      .RoTLDPasswordCharacters()
  });

module.exports = inputSchema;
