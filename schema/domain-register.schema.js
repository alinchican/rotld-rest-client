const schemaValidator = require("../schemaValidator");

const inputSchema = schemaValidator
  .object()
  .required()
  .keys({
    // domain [string]: a valid .ro domain name [mandatory]
    domain: schemaValidator
      .string()
      .required()
      .RoTLDDomain(),

    // reservation [optional] [0|1   defaults to 0].  If “1” the domain will be reserved, if “0” or not present, the domain
    // will be registered.
    reservation: schemaValidator.number().valid([0, 1]),

    // c_registrant [string] [mandatory]: The registrant contact ID (a registrant must be created before registering the
    // domain).
    c_registrant: schemaValidator.string().required(),

    // domain_password[string:ascii][optional]: If not present, a password will be generated by the system. A valid
    // password must:
    // have minimum 6 characters;
    // have maximum 40 characters;
    // have at least one uppercase character;
    // have at least one lowercase character;
    // have at least one digit;
    // contain the characters: [a-z 0-9-.,:;[]{}_+=@#$^*?!|~].
    domain_password: schemaValidator.string(),

    // domain_period [string] [mandatory] [a number between 1 and 10] which represents the number of years. A
    // year has 365 days and it does not account the leap years.
    domain_period: schemaValidator
      .number()
      .required()
      .min(1)
      .max(10)
  });

module.exports = inputSchema;
